
# 4. (LATE FUNCTIONS) Showing different outcomes if the user wins:


def win_outcomes():

    # If it took 1 attempt to guess number correctly:

    if counter == 1:

        # If the boundaries are equal:

        if lower == upper:
            print()
            print("ROUND", counteragain, "WINNING SCORE:", counter,)
            print()
            print("...that's quite strange.")
            print()
            print("Aha! I see that both of your boundary numbers are equal.")
            print()
            print("You think you're so smart, don't you", name+"?")

        # If the boundaries are not equal:

        elif lower != upper:
            print()
            print("ROUND", counteragain, "WINNING SCORE:", counter)
            print()
            print("WOW!!! I must say you got a bit lucky there", name+".")

# If it took more than 1 attempt to guess number correctly:

    if counter > 1:
        print()
        print("↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦")
        print("ROUND", counteragain, "FINAL WINNING SCORE:", counter)
        print("↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦↦")

# Function that shows end game stats:


def end_stats():

    # If the user doesn't want to play again:

    print()
    print("Thank you for playing the HL Game", name+"!")
    print()
    print("░▒▓█░▒▓█░▒▓█░▒▓█░▒▓█░▒▓█░▒▓█░▒▓█░▒▓█")
    print("STATS:")

    # Prints all calculated end game stats:

    print("TOTAL AMOUNT OF GAMES PLAYED:", counteragain)
    print("TOTAL AMOUNT OF GUESSES MADE:", totalcounter)
    print("WIN RATE:", (100 / counteragain) * wins, "%")
    print("LOSE RATE:", (100 / counteragain) * losses, "%")
    print("LOWEST/BEST WINNING SCORE:", min(counterlist))
    print("HIGHEST/WORST WINNING SCORE:", max(counterlist))
    print("MEAN OF GUESSES PER GAME:", totalcounter / counteragain)
    print("░▒▓█░▒▓█░▒▓█░▒▓█░▒▓█░▒▓█░▒▓█░▒▓█░▒▓█")
    print()
    return


# -----END OF FUNCTIONS-----


# TEST CODE:

counter = 1
lower = 0
upper = 1
name = ("Test")
counteragain = 8
counterlist = (1, 2, 3, 4, 5, 6, 7, 8)
wins = 5
losses = 3
totalcounter = 36
win_outcomes()
end_stats()
